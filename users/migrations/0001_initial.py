# Generated by Django 5.0.8 on 2024-09-04 08:06

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import users.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('Talent', 'Talent'), ('Company', 'Company'), ('Recruiter', 'Recruiter')], max_length=50)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('accept_terms', models.BooleanField(default=True)),
                ('license_type', models.CharField(blank=True, max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Custom User',
                'verbose_name_plural': 'Custom Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('job_history', models.JSONField(blank=True, default=dict, null=True)),
                ('divisions', models.JSONField(blank=True, default=dict)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=200)),
                ('requirements', models.JSONField(blank=True, default=list)),
                ('salary', models.FloatField()),
                ('job_type', models.CharField(max_length=200)),
                ('job_sitting', models.CharField(choices=[('Office', 'Office'), ('Remote', 'Remote'), ('Hybrid', 'Hybrid'), ('Other', 'Other')], max_length=255)),
                ('division', models.CharField(max_length=200)),
                ('end_date', models.DateField()),
                ('is_relevant', models.BooleanField(default=False)),
                ('relevant_talents', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_jobs', to='users.company')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='open_jobs',
            field=models.ManyToManyField(blank=True, related_name='companies', to='users.job'),
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=250, null=True)),
                ('last_name', models.CharField(blank=True, max_length=250, null=True)),
                ('division', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('my_searchings', models.JSONField(blank=True, default=dict, null=True)),
                ('working_time', models.JSONField(blank=True, default=dict, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_recruiters', to='users.company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recruiter_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='recruiter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recruiter_jobs', to='users.recruiter'),
        ),
        migrations.CreateModel(
            name='Talent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('is_open_to_work', models.BooleanField(default=False)),
                ('residence', models.CharField(blank=True, max_length=255, null=True)),
                ('about_me', models.TextField(blank=True, null=True)),
                ('job_type', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('job_sitting', models.CharField(blank=True, max_length=255, null=True)),
                ('field_of_interest', models.JSONField(blank=True, default=dict)),
                ('social_links', models.JSONField(blank=True, default=list)),
                ('companies_black_list', models.JSONField(blank=True, default=list)),
                ('skills', models.JSONField(blank=True, default=dict)),
                ('languages', models.JSONField(blank=True, default=dict)),
                ('certificates', models.TextField(blank=True, max_length=250, null=True)),
                ('open_processes', models.JSONField(blank=True, null=True)),
                ('cv', models.FileField(blank=True, null=True, upload_to=users.models.cv_upload_path)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=users.models.profile_picture_upload_path)),
                ('recommendation_letter', models.FileField(blank=True, null=True, upload_to=users.models.recommendation_letter_upload_path)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='talent_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
